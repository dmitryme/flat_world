#ifndef PROTO_BUILDER_H
#define PROTO_BUILDER_H

/* Generated by flatcc 0.5.3-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef PROTO_READER_H
#include "proto_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#undef flatbuffers_identifier
#define flatbuffers_identifier "v001"
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

static const flatbuffers_voffset_t __proto_Order_required[] = { 0 };
typedef flatbuffers_ref_t proto_Order_ref_t;
static proto_Order_ref_t proto_Order_clone(flatbuffers_builder_t *B, proto_Order_table_t t);
__flatbuffers_build_table(flatbuffers_, proto_Order, 1)

#define __proto_Order_formal_args , uint32_t v0
#define __proto_Order_call_args , v0
static inline proto_Order_ref_t proto_Order_create(flatbuffers_builder_t *B __proto_Order_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, proto_Order, proto_Order_identifier, proto_Order_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, proto_Order_id, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), proto_Order)

static inline proto_Order_ref_t proto_Order_create(flatbuffers_builder_t *B __proto_Order_formal_args)
{
    if (proto_Order_start(B)
        || proto_Order_id_add(B, v0)) {
        return 0;
    }
    return proto_Order_end(B);
}

static proto_Order_ref_t proto_Order_clone(flatbuffers_builder_t *B, proto_Order_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (proto_Order_start(B)
        || proto_Order_id_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, proto_Order_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* PROTO_BUILDER_H */
